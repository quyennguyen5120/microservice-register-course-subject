import org.springframework.boot.gradle.tasks.bundling.BootJar
import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '1.0-SNAPSHOT'

repositories {
    maven { url 'https://repo1.maven.org/maven2' }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.3.5"
        }
        dependencies {
            dependency 'org.projectlombok:lombok:1.18.28'
        }
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web"
        testImplementation platform('org.junit:junit-bom:5.10.0')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation "org.springframework.boot:spring-boot-starter-aop"
        implementation 'io.micrometer:micrometer-registry-prometheus'
        implementation "io.github.resilience4j:resilience4j-spring-boot3:2.2.0"
        implementation("io.github.resilience4j:resilience4j-circuitbreaker:2.2.0")
        implementation 'io.github.resilience4j:resilience4j-micrometer'
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(BootJar).configureEach {
        mainClass.set('com.example.ServiceRegisterApplication')
    }
}

project(':ddd-start') {
    dependencies {
        implementation project(':ddd-controller')
        implementation 'org.springframework.boot:spring-boot-starter'
    }
}

project(':ddd-controller') {
    dependencies {
        implementation project(':ddd-application')
        implementation project(':ddd-domain')
    }
}

project(':ddd-application') {
    dependencies {
        implementation project(':ddd-domain')
        implementation project(':ddd-infrastructure')
    }
}

project(':ddd-domain') {
    dependencies {
    }
}

project(':ddd-infrastructure') {
    dependencies {
        implementation project(':ddd-domain')
        implementation 'mysql:mysql-connector-java:8.0.33'
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
        implementation 'p6spy:p6spy:3.9.1'
        implementation group: 'org.redisson', name: 'redisson', version: '3.38.1'
    }
}

allprojects {
    layout.buildDirectory.set(file("$rootDir/build/${project.name}"))
}

tasks.withType(BootJar).configureEach {
    mainClass.set('com.example.ServiceRegisterApplication')
}